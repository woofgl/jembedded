#summary JMS Integration Test Unit-
#labels Phase-Implementation

= Introduction =

Testing JMS Destinations (ActiveMQ Embbeded broker).

{{{
@ActiveMQServiceConfiguration
@ConnectionFactoryConfiguration
@QueueDestinationConfiguration(subject = "TEST.QueueA")
@TopicDestinationConfiguration(subject = "TEST.TopicA")
public class EmbeddedJMSIntegrationTest extends AbstractJMSIntegrationTest {

	@Test
	public void testQueueDestinationCreation() {
		assertQueueDestinationCreation("TEST.TEST");
	}

	@Test
	public void testAnnotatedQueuDestinationCreation() {
		assertNotNull(getDestination(QueueDestinationConfiguration.class));
		assertReceiveMessage("TEST.QueueA");
		assertReceiveMessage(getDestination(QueueDestinationConfiguration.class));
	}

	@Test
	public void testQueueReceive() {
		getJMSClient().sendMessage("TEST.QueueA", "testing msg");
		Message message = getJMSClient().getJmsTemplate()
				.receive("TEST.QueueA");
		assertNotNull(message);
	}

	@Test
	public void testAnnotatedTopicDestinationCreation() {
		assertNotNull(getDestination(TopicDestinationConfiguration.class));
		assertReceiveMessage("TEST.TopicA");
	}

	@Test
	public void testQueueError() {
		getJMSClient().sendMessage("TEST.QueueB", "testing msg");
		Message message = getJMSClient().getJmsTemplate()
				.receive("TEST.QueueA");
		assertNull(message);
	}

}

}}}

That's all you need in order to do the integration test. No need to install, configure and run an external ActiveMQ server as an embedded one is included and ready to roll.




= Details =

In order to use this Integration Test Unit have a look at the install notes page.