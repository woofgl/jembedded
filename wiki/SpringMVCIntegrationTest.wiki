#labels Phase-Implementation
<wiki:toc max_depth="3" />

= Introduction =

To test a Spring MVC Web application you can use the general guidelines given in the how to start section:

- Create a POJO class that extends from IntegrationTest.

- Annotate the class with desired annotations (in this case a web server annotation would be right).

- Create the test methods and annotate them with @Test.

All the annotations relies on default values, except of course the minimum needed parameters. In this case would be webApplication(jetty) and webApplications(tomcat).


= Examples = 

Several items are checked:  controller,  status http response etc..

{{{

//Http Assert Test Module.
import static org.jsemantic.jintegration.test.http.Assert.*;

//Spring Assert Test Module.
import static org.jsemantic.jintegration.test.spring.Assert.*;

@JettyServiceConfiguration(webApplication = "src/it/resources/webapps/spring")

public class EmbeddedSpringIntegrationTest extends IntegrationTest {
	@Test
	public void testContextPath() {
		assertNotNull(getWebApplicationContext());
		assertNotNullContextPath();
		assertEqualsContextPath("/test");
	}
	@Test
	public void controllersTesting() {
		String uri = "http://localhost:9006/test/controller";
		assertExistController("controller");
		assertExistBean("service");

		assertResponseStatusOK(uri);
		assertResponseContentEmpty(uri);
	}
}

}}}